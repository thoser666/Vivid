name: Android CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  # 1️⃣ Build & Test
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      id-token: write        # benötigt, falls du OIDC‑auth mit Sentry nutzt
      # ── nur die Schritte, die du brauchst ──
      # id-token: write  # optional, wenn du z.B. GCP/GitHub Packages veröffentlichen willst

    env:
      # ── Sentry‑Konfiguration (nur die wichtigsten) ──
      SENTRY_ORG: private-jb
      SENTRY_PROJECT: vivid
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Grant executable permission to gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Run lint & static analysis
        run: ./gradlew lintDebug

      # ── Optional: Code‑Scanning / Security‑Events ──
      # - name: Run CodeQL
      #   uses: github/codeql-action/init@v2
      #   with:
      #     languages: java

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: app/build/reports

  # 2️⃣ Release (nur auf `main` bzw. wenn der PR auf `main` gemergt wird)
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build          # wartet auf den erfolgreichen Build‑Job
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      packages: read
      id-token: write

    env:
      SENTRY_ORG: private-jb
      SENTRY_PROJECT: vivid

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # ── Sentry CLI (nur für Release) ──
      - name: Setup Sentry CLI
        uses: matbour/setup-sentry-cli@v1
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # ── Decodieren & Signieren des Keystores ──
      - name: Decode and install keystore
        if: secrets.SIGNING_KEY_STORE_BASE64 != ''
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/signing-keystore.jks
        run: |
          echo "${{ secrets.SIGNING_KEY_STORE_BASE64 }}" | base64 -d > "$KEYSTORE_PATH"

      # ── Release Build (signiert) ──
      - name: Assemble signed release APK
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/signing-keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file="$KEYSTORE_PATH" \
            -Pandroid.injected.signing.store.password="$KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$KEY_PASSWORD"

      # ── Artifact‑Upload ──
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 5
